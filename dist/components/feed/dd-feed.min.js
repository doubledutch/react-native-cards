var DD = DD || {}; DD["feed"] =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _ddDdview = __webpack_require__(16);

	var _ddDdview2 = _interopRequireDefault(_ddDdview);

	var _feedData = __webpack_require__(17);

	var _feedData2 = _interopRequireDefault(_feedData);

	var _feedRecommendedPeople = __webpack_require__(18);

	var _feedRecommendedPeople2 = _interopRequireDefault(_feedRecommendedPeople);

	var _feedRecommendedChannels = __webpack_require__(22);

	var _feedRecommendedChannels2 = _interopRequireDefault(_feedRecommendedChannels);

	var _feedCheckin = __webpack_require__(23);

	var _feedCheckin2 = _interopRequireDefault(_feedCheckin);

	var _feedCard = __webpack_require__(21);

	var _feedCard2 = _interopRequireDefault(_feedCard);

	var _ddDimensions = __webpack_require__(20);

	var _ddDimensions2 = _interopRequireDefault(_ddDimensions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ReactNative = __webpack_require__(1);
	var React = __webpack_require__(2);
	var DD = __webpack_require__(3).DDBindings;
	var Text = ReactNative.Text;
	var View = ReactNative.View;
	var TouchableHighlight = ReactNative.TouchableHighlight;
	var ListView = ReactNative.ListView;
	var Image = ReactNative.Image;

	var Feed = function (_React$Component) {
	  _inherits(Feed, _React$Component);

	  function Feed(props) {
	    _classCallCheck(this, Feed);

	    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Feed).call(this, props));

	    var dataSource = new ListView.DataSource({ rowHasChanged: function rowHasChanged(r1, r2) {
	        return r1 !== r2;
	      } });
	    _this.state = {
	      dataSource: dataSource.cloneWithRows([{ Name: 'Loading...', Activities: [{}] }])
	    };

	    _this._renderRow = _this._renderRow.bind(_this);
	    _this._rowPressed = _this._rowPressed.bind(_this);
	    _this.isFetching = false;
	    return _this;
	  }

	  _createClass(Feed, [{
	    key: 'componentDidMount',
	    value: function componentDidMount() {
	      var _this2 = this;

	      if (!this.isFetching) {
	        this.isFetching = true;

	        // alert(JSON.stringify(DD.currentUser))
	        // alert(JSON.stringify(DD.currentEvent))
	        this.fetchFeed().then(function (feed) {
	          _this2.isFetching = false;

	          _this2.setState({
	            feed: feed,
	            dataSource: _this2.getDataSource(feed)
	          });
	        }).catch(function (err) {
	          _this2.isFetching = false;
	        });
	      }
	    }
	  }, {
	    key: 'fetchFeed',
	    value: function fetchFeed() {
	      var _this3 = this;

	      return new Promise(function (resolve, reject) {

	        resolve(_feedData2.default.cards);
	        return;
	        DD.requestAccessToken(function (err, token) {
	          var url = DD.apiRootURL + '/activitygroups/?count=20&applicationId=' + DD.currentEvent.EventId;
	          // TODO - if we have auth, we need to set the head
	          fetch(url, { method: 'GET', headers: { Authorization: 'Bearer ' + token } }).then(function (response) {
	            return response.json();
	          }).catch(function (error) {
	            _this3.isFetching = false;
	            console.error(error);
	            alert('error');
	          }).then(function (responseData) {
	            resolve(responseData.Value);
	          });
	        });
	      });
	    }
	  }, {
	    key: 'getDataSource',
	    value: function getDataSource(data) {
	      var filteredData = data;
	      return this.state.dataSource.cloneWithRows(filteredData);
	    }
	  }, {
	    key: '_rowPressed',
	    value: function _rowPressed(row) {
	      if (this.props.rowPressed) {
	        this.props.rowPressed(row);
	      }
	      console.log(row);
	    }
	  }, {
	    key: '_rowFavoritePressed',
	    value: function _rowFavoritePressed(row) {
	      // We will bookmark here
	      row.IsFavorite = true;
	    }
	  }, {
	    key: '_formatDate',
	    value: function _formatDate(date) {
	      var hours = date.getHours();
	      var minutes = date.getMinutes();
	      var ampm = 'am';
	      if (hours === 0) {
	        hours = 12;
	      } else if (hours >= 12) {
	        ampm = 'pm';
	        if (hours > 12) {
	          hours = hours - 12;
	        }
	      }

	      if (minutes < 10) {
	        minutes = '0' + minutes;
	      }

	      return hours + ':' + minutes + ' ' + ampm;
	    }
	  }, {
	    key: '_formatDateRange',
	    value: function _formatDateRange(row) {
	      var start = new Date(row.StartDate);
	      var end = new Date(row.EndDate);

	      return this._formatDate(start) + ' - ' + this._formatDate(end);
	    }
	  }, {
	    key: '_renderRow',
	    value: function _renderRow(rowData, sectionID, rowID) {
	      var selectedStyle = rowData.IsFavorite ? styles.rowButtonSelected : {};
	      var underlayColor = rowData.IsFavorite ? 'white' : 'blue';
	      var dateRange = this._formatDateRange(rowData);

	      var card = null;
	      var act = rowData;

	      switch (act.template) {
	        case 'people-recommendations-1':
	          // Checkin
	          card = React.createElement(_feedRecommendedPeople2.default, { data: act.data });
	          break;
	        case 'channel-recommendations-1':
	          // Checkin
	          card = React.createElement(_feedRecommendedChannels2.default, { data: act.data });
	          break;
	        case 'checkins':
	          card = React.createElement(_feedCheckin2.default, { data: act.data });
	          break;
	        default:
	          card = React.createElement(_feedCard2.default, { data: act.data });
	          break;
	      }

	      return React.createElement(
	        View,
	        { style: styles.container },
	        card
	      );
	    }
	  }, {
	    key: 'render',
	    value: function render() {
	      return React.createElement(ListView, {
	        dataSource: this.state.dataSource,
	        renderRow: this._renderRow,
	        initialListSize: 10,
	        styles: styles.list,
	        contentContainerStyle: styles.content
	      });
	    }
	  }]);

	  return Feed;
	}(React.Component);

	var styles = ReactNative.StyleSheet.create({
	  list: {},
	  content: {
	    //height: Dimensions.get('window').height,
	  },
	  separator: {
	    height: 1,
	    backgroundColor: '#dddde0'
	  },
	  namecont: {
	    padding: 5,
	    height: 50,
	    flex: 1,
	    justifyContent: 'center',
	    marginBottom: 20
	  },
	  name: {
	    fontSize: 17,
	    fontWeight: '600',
	    color: '#aaa'
	  },
	  date: {
	    fontSize: 19,
	    color: '#aaa',
	    padding: 5,
	    position: 'absolute',
	    bottom: 0
	  },
	  container: {
	    overflow: 'hidden'
	  },
	  rowContainer: {
	    flexDirection: 'row',
	    padding: 0,
	    marginLeft: -15,
	    paddingLeft: 0,
	    overflow: 'hidden',
	    height: 75
	  },
	  rowTracks: {
	    width: 5,
	    backgroundColor: 'green',
	    position: 'absolute',
	    top: 0,
	    bottom: 0,
	    left: 0
	  },
	  rowBody: {
	    flex: 1,
	    marginLeft: 10,
	    marginRight: 60
	  },
	  rowButton: {
	    position: 'absolute',
	    right: 10,
	    top: 12,
	    width: 50,
	    height: 50,
	    borderWidth: 1,
	    borderRadius: 5,
	    borderColor: 'green'
	  },
	  rowButtonSelected: {
	    backgroundColor: 'green'
	  },
	  rowImage: {
	    height: 30,
	    width: 30,
	    margin: 10
	  }
	});

	exports.default = Feed;

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = ReactNative;

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = React;

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = DD.nativemodules;

/***/ },
/* 4 */,
/* 5 */,
/* 6 */,
/* 7 */,
/* 8 */,
/* 9 */,
/* 10 */,
/* 11 */,
/* 12 */,
/* 13 */,
/* 14 */,
/* 15 */,
/* 16 */
/***/ function(module, exports) {

	module.exports = DD.ddview;

/***/ },
/* 17 */
/***/ function(module, exports) {

	'use strict';

	module.exports = {
	  "cards": [
	  /*
	  {
	    "created": "2016-08-02T21:07:06.186Z",
	    "id": "2aee3418-e8a4-427b-9a8b-eae533992c57",
	    "template": "checkins",
	    "data": [      {
	      "IsDisabled": false,
	      "Id": "CHK-12",
	      "Type": 0,
	      "Activities": [
	        {
	          "Updated": "2016-01-11T02:57:32.397Z",
	          "Id": "CHK-12",
	          "MappingId": 12,
	          "Source": {
	            "Updated": "2016-01-08T22:21:02.026Z",
	            "Id": 75,
	            "FirstName": "Engineering",
	            "LastName": "Test",
	            "ImageUrl": "https:\/\/d2ramlsbt2b9kt.cloudfront.net\/default\/noface_110.jpg",
	            "Title": "",
	            "Company": ""
	          },
	          "Type": 1,
	          "Target": null,
	          "Verb": "posted an update:",
	          "CallToAction": [
	            {
	              "Title": "Check In",
	              "Route": "tt:\/\/update\/1",
	              "HasCurrentUserPerformedAction": false
	            }
	          ],
	          "Comments": [
	            {
	              "Updated": "2016-01-11T02:59:40.185Z",
	              "Id": 2,
	              "CheckInId": 12,
	              "CommentId": 2,
	              "Comments": "Test comment with @Engineering Test and #hash",
	              "DisplayOrder": null,
	              "MetadataTags": [
	                {
	                  "Value": "hash",
	                  "Type": "Hashtag",
	                  "StartIndex": 40,
	                  "Length": 5,
	                  "Route": "dd:\/\/hashtag\/hash"
	                },
	                {
	                  "Value": 75,
	                  "Type": "Mention",
	                  "StartIndex": 18,
	                  "Length": 17,
	                  "Route": "dd:\/\/profile\/75"
	                }
	              ],
	              "User": {
	                "Updated": "0001-01-01T00:00:00.000Z",
	                "Id": 75,
	                "FirstName": "Engineering",
	                "LastName": "Test",
	                "ImageUrl": "https:\/\/d2ramlsbt2b9kt.cloudfront.net\/default\/noface_110.jpg",
	                "Title": "",
	                "Company": ""
	              }
	            },
	            {
	              "Updated": "2016-01-11T02:59:50.391Z",
	              "Id": 3,
	              "CheckInId": 12,
	              "CommentId": 3,
	              "Comments": "Another comment",
	              "DisplayOrder": null,
	              "MetadataTags": [
	                
	              ],
	              "User": {
	                "Updated": "0001-01-01T00:00:00.000Z",
	                "Id": 75,
	                "FirstName": "Engineering",
	                "LastName": "Test",
	                "ImageUrl": "https:\/\/d2ramlsbt2b9kt.cloudfront.net\/default\/noface_110.jpg",
	                "Title": "",
	                "Company": ""
	              }
	            },
	            {
	              "Updated": "2016-01-11T02:59:54.403Z",
	              "Id": 4,
	              "CheckInId": 12,
	              "CommentId": 4,
	              "Comments": "One more",
	              "DisplayOrder": null,
	              "MetadataTags": [
	                
	              ],
	              "User": {
	                "Updated": "0001-01-01T00:00:00.000Z",
	                "Id": 75,
	                "FirstName": "Engineering",
	                "LastName": "Test",
	                "ImageUrl": "https:\/\/d2ramlsbt2b9kt.cloudfront.net\/default\/noface_110.jpg",
	                "Title": "",
	                "Company": ""
	              }
	            }
	          ],
	          "Likes": [
	            {
	              "Updated": "2016-01-11T02:59:21.842Z",
	              "Id": 1,
	              "CheckInId": 12,
	              "User": {
	                "Updated": "0001-01-01T00:00:00.000Z",
	                "Id": 75,
	                "FirstName": "Engineering",
	                "LastName": "Test",
	                "ImageUrl": "https:\/\/d2ramlsbt2b9kt.cloudfront.net\/default\/noface_110.jpg",
	                "Title": "",
	                "Company": ""
	              }
	            }
	          ],
	          "Associations": [
	            
	          ],
	          "Notes": "Photo test with #hashtags and @Engineering Test ",
	          "Images": [
	            {
	              "Url": "https:\/\/d3dhqk2br2olrw.cloudfront.net\/32c825fc-af8d-45f6-93f1-ee70abc45abb-S320x480.jpg",
	              "ThumbnailUrl": "https:\/\/d3dhqk2br2olrw.cloudfront.net\/32c825fc-af8d-45f6-93f1-ee70abc45abb-S20x20.jpg",
	              "DisplayOrder": 0
	            }
	          ],
	          "CurrentUserLikeThis": true,
	          "Created": "2016-01-11T02:57:32.397Z",
	          "DisplayAfter": "2016-01-11T02:57:32.397Z",
	          "MetadataTags": [
	            {
	              "Value": 75,
	              "Type": "Mention",
	              "StartIndex": 30,
	              "Length": 17,
	              "Route": "dd:\/\/profile\/75"
	            },
	            {
	              "Value": "hashtags",
	              "Type": "Hashtag",
	              "StartIndex": 16,
	              "Length": 9,
	              "Route": "dd:\/\/hashtag\/hashtags"
	            }
	          ]
	        }
	      ],
	      "Verb": null,
	      "Updated": "2016-01-11T02:57:32.397Z"
	    },
	    {
	      "IsDisabled": false,
	      "Id": "CHK-9",
	      "Type": 0,
	      "Activities": [
	        {
	          "Updated": "2016-01-08T05:56:03.532Z",
	          "Id": "CHK-9",
	          "MappingId": 9,
	          "Source": {
	            "Updated": "2016-01-08T09:56:43.200Z",
	            "Id": 110,
	            "FirstName": "Venus",
	            "LastName": "Mcain",
	            "ImageUrl": "https:\/\/d2ramlsbt2b9kt.cloudfront.net\/default\/noface_110.jpg",
	            "Title": "test title",
	            "Company": "test company"
	          },
	          "Type": 1,
	          "Target": null,
	          "Verb": "posted an update:",
	          "CallToAction": [
	            {
	              "Title": "Check In",
	              "Route": "tt:\/\/update\/1",
	              "HasCurrentUserPerformedAction": false
	            }
	          ],
	          "Comments": [
	            
	          ],
	          "Likes": [
	            {
	              "Updated": "2016-01-11T02:59:22.745Z",
	              "Id": 2,
	              "CheckInId": 9,
	              "User": {
	                "Updated": "0001-01-01T00:00:00.000Z",
	                "Id": 75,
	                "FirstName": "Engineering",
	                "LastName": "Test",
	                "ImageUrl": "https:\/\/d2ramlsbt2b9kt.cloudfront.net\/default\/noface_110.jpg",
	                "Title": "",
	                "Company": ""
	              }
	            }
	          ],
	          "Associations": [
	            
	          ],
	          "Notes": "Hi",
	          "CurrentUserLikeThis": true,
	          "Created": "2016-01-08T05:56:03.532Z",
	          "DisplayAfter": "2016-01-08T05:56:03.532Z",
	          "MetadataTags": [
	            
	          ]
	        }
	      ],
	      "Verb": null,
	      "Updated": "2016-01-08T05:56:03.532Z"
	    }]
	  },*/
	  {
	    "template": "people-recommendations-1",
	    "data": [{
	      "User": {
	        "ID": "userid1",
	        "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	        "FirstName": "Nicholas",
	        "LastName": "Clark",
	        "Title": "CTO",
	        "Company": "DoubleDutch"
	      }
	    }, {
	      "User": {
	        "ID": "userid2",
	        "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	        "FirstName": "Lucian",
	        "LastName": "Beebe",
	        "Title": "VP Product",
	        "Company": "DoubleDutch"
	      }
	    }, {
	      "User": {
	        "ID": "userid3",
	        "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	        "FirstName": "Nicholas",
	        "LastName": "Clark",
	        "Title": "CTO",
	        "Company": "DoubleDutch"
	      }
	    }, {
	      "User": {
	        "ID": "userid4",
	        "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	        "FirstName": "Nicholas",
	        "LastName": "Clark",
	        "Title": "CTO",
	        "Company": "DoubleDutch"
	      }
	    }],
	    "created": "2016-08-02T21:07:06.186Z",
	    "id": "1aee3418-e8a4-427b-9a8b-eae533992c57"
	  }, {
	    "template": "channel-recommendations-1",
	    "data": [{
	      "ID": "1",
	      "Name": "The Beginners Guide to Selecting Ideal Participants in Testing Trisomething And something else",
	      "Type": "Session Channel",
	      "UserCount": 37,
	      "Users": [{
	        "User": {
	          "ID": "userid1",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid2",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Lucian",
	          "LastName": "Beebe",
	          "Title": "VP Product",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid3",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid4",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }]
	    }, {
	      "ID": "2",
	      "Name": "Best Topic Channel Ever Created or Something Like That",
	      "Type": "Topic Channel",
	      "UserCount": 14,
	      "Users": [{
	        "User": {
	          "ID": "userid1",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid2",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Lucian",
	          "LastName": "Beebe",
	          "Title": "VP Product",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid3",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid4",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }]
	    }],
	    "created": "2016-08-02T21:07:06.186Z",
	    "id": "1aee3418-e8a4-427b-9a8b-eae533992c57"
	  }, {
	    "template": "channel-recommendations-1",
	    "data": [{
	      "ID": "1",
	      "Name": "The Beginners Guide to Selecting Ideal Participants in Testing Trisomething And something else",
	      "Type": "Session Channel",
	      "UserCount": 37,
	      "Users": [{
	        "User": {
	          "ID": "userid1",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid2",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Lucian",
	          "LastName": "Beebe",
	          "Title": "VP Product",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid3",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid4",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }]
	    }, {
	      "ID": "2",
	      "Name": "Best Topic Channel Ever Created or Something Like That",
	      "Type": "Topic Channel",
	      "UserCount": 14,
	      "Users": [{
	        "User": {
	          "ID": "userid1",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid2",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Lucian",
	          "LastName": "Beebe",
	          "Title": "VP Product",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid3",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid4",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }]
	    }],
	    "created": "2016-08-02T21:07:06.186Z",
	    "id": "1aee3418-e8a4-427b-9a8b-eae533992c57"
	  }, {
	    "template": "channel-recommendations-1",
	    "data": [{
	      "ID": "1",
	      "Name": "The Beginners Guide to Selecting Ideal Participants in Testing Trisomething And something else",
	      "Type": "Session Channel",
	      "UserCount": 37,
	      "Users": [{
	        "User": {
	          "ID": "userid1",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid2",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Lucian",
	          "LastName": "Beebe",
	          "Title": "VP Product",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid3",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid4",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }]
	    }, {
	      "ID": "2",
	      "Name": "Best Topic Channel Ever Created or Something Like That",
	      "Type": "Topic Channel",
	      "UserCount": 14,
	      "Users": [{
	        "User": {
	          "ID": "userid1",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid2",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Lucian",
	          "LastName": "Beebe",
	          "Title": "VP Product",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid3",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }, {
	        "User": {
	          "ID": "userid4",
	          "ImageURL": "https://d2dstwi4brf1pu.cloudfront.net/6f89f1d6-7b04-43af-8d4d-5c10fb902742-S110x110.jpg",
	          "FirstName": "Nicholas",
	          "LastName": "Clark",
	          "Title": "CTO",
	          "Company": "DoubleDutch"
	        }
	      }]
	    }],
	    "created": "2016-08-02T21:07:06.186Z",
	    "id": "1aee3418-e8a4-427b-9a8b-eae533992c57"
	  }]
	};

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _reactNative = __webpack_require__(1);

	var _feedCardwrapper = __webpack_require__(19);

	var _feedCard = __webpack_require__(21);

	var _feedCard2 = _interopRequireDefault(_feedCard);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	'use strict';

	var React = __webpack_require__(2);
	var ReactNative = __webpack_require__(1);

	var PeopleRecommendations1 = function (_FeedCard) {
	  _inherits(PeopleRecommendations1, _FeedCard);

	  function PeopleRecommendations1() {
	    _classCallCheck(this, PeopleRecommendations1);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(PeopleRecommendations1).apply(this, arguments));
	  }

	  _createClass(PeopleRecommendations1, [{
	    key: 'render',
	    value: function render() {
	      return React.createElement(
	        _feedCardwrapper.FeedCardWrapper,
	        { title: 'Recommended People' },
	        React.createElement(
	          _reactNative.ScrollView,
	          {
	            showsHorizontalScrollIndicator: false,
	            automaticallyAdjustInsets: false,
	            decelerationRate: 0,
	            snapToAlignment: 'start',
	            snapToInterval: (0, _feedCardwrapper.GET_CARD_WIDTH)() + _feedCardwrapper.CARD_MARGIN * 1,
	            horizontal: true, style: { flex: 1 },
	            contentContainerStyle: styles.content },
	          this.props.data.map(function (d) {
	            return React.createElement(
	              _reactNative.View,
	              { key: d.User.ID, style: [styles.personCard, { width: (0, _feedCardwrapper.GET_CARD_WIDTH)() }] },
	              React.createElement(
	                _reactNative.TouchableHighlight,
	                { style: styles.dismissButton },
	                React.createElement(
	                  _reactNative.Text,
	                  { style: styles.dismissButtonText },
	                  '×'
	                )
	              ),
	              React.createElement(
	                _reactNative.View,
	                { style: styles.profile },
	                React.createElement(_reactNative.Image, { source: { uri: d.User.ImageURL }, style: styles.profileImage }),
	                React.createElement(
	                  _reactNative.View,
	                  { style: { marginLeft: 5 } },
	                  React.createElement(
	                    _reactNative.Text,
	                    { style: styles.profileName },
	                    d.User.FirstName
	                  ),
	                  React.createElement(
	                    _reactNative.Text,
	                    { style: styles.profileTitle },
	                    d.User.Title + ' @ ' + d.User.Company
	                  )
	                )
	              ),
	              React.createElement(
	                _reactNative.View,
	                { style: styles.actionBar },
	                React.createElement(
	                  _reactNative.TouchableHighlight,
	                  { style: styles.cardButton, underlayColor: 'green' },
	                  React.createElement(
	                    _reactNative.Text,
	                    null,
	                    'Follow'
	                  )
	                ),
	                React.createElement(
	                  _reactNative.TouchableHighlight,
	                  { style: styles.cardButton, underlayColor: "blue" },
	                  React.createElement(
	                    _reactNative.Text,
	                    null,
	                    'Message'
	                  )
	                )
	              )
	            );
	          })
	        )
	      );
	    }
	  }]);

	  return PeopleRecommendations1;
	}(_feedCard2.default);

	var styles = ReactNative.StyleSheet.create({
	  profile: {
	    flex: 1,
	    height: 44,
	    flexDirection: 'row',
	    marginBottom: 8,
	    marginTop: 4,
	    marginLeft: 4
	  },
	  profileTitle: {
	    lineHeight: 20,
	    color: '#777'
	  },
	  profileName: {
	    lineHeight: 20,
	    fontWeight: 'bold',
	    fontSize: 16
	  },
	  profileImage: {
	    //resizeMode: 'center',
	    height: 40,
	    width: 40,
	    margin: 2,
	    borderRadius: 20,
	    borderWidth: 1,
	    borderColor: 'green'
	  },
	  dismissButton: {
	    height: 24,
	    width: 24,
	    right: 0,
	    top: 0,
	    position: 'absolute',
	    alignItems: 'center'
	  },
	  dismissButtonText: {
	    lineHeight: 24,
	    fontSize: 24,
	    color: '#888',
	    fontWeight: '400'
	  },
	  personCard: {
	    //width: CARD_WIDTH,
	    borderRadius: 5,
	    borderColor: '#ccc',
	    borderWidth: 1,
	    marginRight: _feedCardwrapper.CARD_MARGIN,
	    padding: 3,
	    justifyContent: 'center'
	  },
	  cardButton: {
	    flex: 1,
	    justifyContent: 'center',
	    alignItems: 'center',
	    borderRadius: 5,
	    borderColor: 'blue',
	    borderWidth: 1,
	    marginTop: 5,
	    marginLeft: 5,
	    marginRight: 5,
	    marginBottom: 5
	  },
	  actionBar: {
	    flex: 1,
	    height: 50,
	    flexDirection: 'row'
	  }
	});

	exports.default = PeopleRecommendations1;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.GET_CARD_WIDTH = exports.CARD_MARGIN = exports.CARD_PREVIEW_WIDTH = exports.FeedCardWrapper = undefined;

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _reactNative = __webpack_require__(1);

	var _ddDimensions = __webpack_require__(20);

	var _ddDimensions2 = _interopRequireDefault(_ddDimensions);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	'use strict';

	var React = __webpack_require__(2);
	var ReactNative = __webpack_require__(1);


	var CARD_PREVIEW_WIDTH = 60;
	var CARD_MARGIN = 5;
	var GET_CARD_WIDTH = function GET_CARD_WIDTH() {
	  return _ddDimensions2.default.get('window').width - CARD_MARGIN * 2 - CARD_PREVIEW_WIDTH;
	};

	var FeedCardWrapper = function (_React$Component) {
	  _inherits(FeedCardWrapper, _React$Component);

	  function FeedCardWrapper(props) {
	    _classCallCheck(this, FeedCardWrapper);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(FeedCardWrapper).call(this, props));
	  }

	  _createClass(FeedCardWrapper, [{
	    key: 'render',
	    value: function render() {
	      var child = this.props.children;

	      return React.createElement(
	        _reactNative.View,
	        { style: styles.wrapper },
	        React.createElement(
	          _reactNative.View,
	          { style: styles.header },
	          React.createElement(
	            _reactNative.Text,
	            { style: styles.headerText },
	            this.props.title
	          ),
	          React.createElement(
	            _reactNative.TouchableHighlight,
	            { style: styles.dismissButton },
	            React.createElement(
	              _reactNative.Text,
	              { style: styles.dismissButtonText },
	              '×'
	            )
	          )
	        ),
	        child,
	        React.createElement(_reactNative.View, { style: styles.separator })
	      );
	    }
	  }]);

	  return FeedCardWrapper;
	}(React.Component);

	var styles = ReactNative.StyleSheet.create({
	  header: {
	    flexDirection: 'row',
	    flex: 1,
	    paddingLeft: 5,
	    paddingRight: 0,
	    height: 30
	  },
	  headerText: {
	    color: '#888',
	    lineHeight: 24,
	    fontWeight: '600',
	    fontSize: 16
	  },
	  dismissButton: {
	    height: 24,
	    width: 24,
	    right: 0,
	    top: 0,
	    position: 'absolute',
	    alignItems: 'center'
	  },
	  dismissButtonText: {
	    lineHeight: 24,
	    fontSize: 24,
	    color: '#888',
	    fontWeight: '400'
	  },
	  wrapper: {
	    paddingLeft: 5,
	    flex: 1,
	    backgroundColor: 'rgba(255,255,255,1)',
	    opacity: 1.5,
	    borderTopWidth: 1,
	    borderTopColor: '#ccc'
	  },
	  separator: {
	    height: 19,
	    backgroundColor: '#fff'
	  },
	  content: {
	    marginTop: 0,
	    paddingLeft: CARD_MARGIN,
	    paddingRight: CARD_PREVIEW_WIDTH,
	    alignItems: 'flex-start',
	    flex: 1,
	    marginBottom: 5
	  }
	});

	exports.FeedCardWrapper = FeedCardWrapper;
	exports.CARD_PREVIEW_WIDTH = CARD_PREVIEW_WIDTH;
	exports.CARD_MARGIN = CARD_MARGIN;
	exports.GET_CARD_WIDTH = GET_CARD_WIDTH;

/***/ },
/* 20 */
/***/ function(module, exports) {

	module.exports = DD.dimensions;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _reactNative = __webpack_require__(1);

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	'use strict';

	var React = __webpack_require__(2);

	var FeedCard = function (_React$Component) {
	  _inherits(FeedCard, _React$Component);

	  function FeedCard(props) {
	    _classCallCheck(this, FeedCard);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(FeedCard).call(this, props));
	  }

	  _createClass(FeedCard, [{
	    key: 'render',
	    value: function render() {
	      return React.createElement(
	        _reactNative.View,
	        null,
	        React.createElement(
	          _reactNative.Text,
	          null,
	          'Unimplemented Card ',
	          JSON.stringify(this.props.data)
	        )
	      );
	    }
	  }]);

	  return FeedCard;
	}(React.Component);

	exports.default = FeedCard;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _reactNative = __webpack_require__(1);

	var _feedCardwrapper = __webpack_require__(19);

	var _feedCard = __webpack_require__(21);

	var _feedCard2 = _interopRequireDefault(_feedCard);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	'use strict';

	var React = __webpack_require__(2);
	var ReactNative = __webpack_require__(1);

	var ChannelRecommendations1 = function (_FeedCard) {
	  _inherits(ChannelRecommendations1, _FeedCard);

	  function ChannelRecommendations1() {
	    _classCallCheck(this, ChannelRecommendations1);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(ChannelRecommendations1).apply(this, arguments));
	  }

	  _createClass(ChannelRecommendations1, [{
	    key: 'render',
	    value: function render() {
	      return React.createElement(
	        _feedCardwrapper.FeedCardWrapper,
	        { title: 'Recommended Channels' },
	        React.createElement(
	          _reactNative.ScrollView,
	          {
	            showsHorizontalScrollIndicator: false,
	            automaticallyAdjustInsets: false,
	            decelerationRate: 0,
	            snapToAlignment: 'start',
	            snapToInterval: (0, _feedCardwrapper.GET_CARD_WIDTH)() + _feedCardwrapper.CARD_MARGIN * 1,
	            horizontal: true, style: { flex: 1 },
	            contentContainerStyle: styles.content },
	          this.props.data.map(function (d) {
	            return React.createElement(
	              _reactNative.View,
	              { key: d.ID, style: [styles.personCard, { width: (0, _feedCardwrapper.GET_CARD_WIDTH)() }] },
	              React.createElement(
	                _reactNative.TouchableHighlight,
	                { style: styles.dismissButton },
	                React.createElement(
	                  _reactNative.Text,
	                  { style: styles.dismissButtonText },
	                  '×'
	                )
	              ),
	              React.createElement(
	                _reactNative.View,
	                { style: styles.profile },
	                React.createElement(
	                  _reactNative.View,
	                  { style: { marginLeft: 0 } },
	                  React.createElement(
	                    _reactNative.Text,
	                    { style: styles.profileTitle },
	                    d.Type
	                  ),
	                  React.createElement(
	                    _reactNative.Text,
	                    { style: [styles.profileName, { width: (0, _feedCardwrapper.GET_CARD_WIDTH)() - 20 }], numberOfLines: 2, lineBreakMode: 'tail' },
	                    d.Name
	                  )
	                )
	              ),
	              React.createElement(
	                _reactNative.View,
	                { style: styles.actionBar },
	                React.createElement(
	                  _reactNative.TouchableHighlight,
	                  { style: { marginRight: 10 } },
	                  React.createElement(
	                    _reactNative.View,
	                    { style: { flexDirection: 'row' } },
	                    d.Users.map(function (u, idx) {
	                      var style = {};
	                      return React.createElement(_reactNative.Image, { key: u.User.ID, source: { uri: u.User.ImageURL }, style: [style, styles.profileImage] });
	                    }),
	                    React.createElement(
	                      _reactNative.Text,
	                      { style: styles.profileCount },
	                      '+37 others'
	                    )
	                  )
	                ),
	                React.createElement(
	                  _reactNative.TouchableHighlight,
	                  { style: styles.cardButton },
	                  React.createElement(
	                    _reactNative.Text,
	                    { style: styles.cardButtonText },
	                    'Message'
	                  )
	                )
	              )
	            );
	          })
	        )
	      );
	    }
	  }]);

	  return ChannelRecommendations1;
	}(_feedCard2.default);

	exports.default = ChannelRecommendations1;


	var styles = ReactNative.StyleSheet.create({
	  profile: {
	    flex: 1,
	    height: 52,
	    flexDirection: 'row',
	    marginBottom: 8,
	    marginTop: 4,
	    marginLeft: 4
	  },
	  profileTitle: {
	    fontSize: 12,
	    lineHeight: 14,
	    color: '#777',
	    marginRight: 10
	  },
	  profileName: {
	    height: 70,
	    lineHeight: 20,
	    fontWeight: 'bold',
	    fontSize: 16
	  },
	  profileCount: {
	    marginLeft: 24,
	    lineHeight: 32
	  },
	  profileImage: {
	    resizeMode: 'contain',
	    height: 36,
	    width: 36,
	    marginTop: 8,
	    borderRadius: 18,
	    borderWidth: 3,
	    borderColor: 'green',
	    marginRight: -20
	  },
	  dismissButton: {
	    height: 24,
	    width: 24,
	    right: 0,
	    top: 0,
	    position: 'absolute',
	    alignItems: 'center'
	  },
	  dismissButtonText: {
	    lineHeight: 24,
	    fontSize: 24,
	    color: '#888',
	    fontWeight: '400'
	  },
	  personCard: {
	    //width: CARD_WIDTH,
	    borderRadius: 5,
	    borderColor: '#ccc',
	    borderWidth: 1,
	    marginRight: _feedCardwrapper.CARD_MARGIN,
	    padding: 3,
	    justifyContent: 'center'
	  },
	  cardButton: {
	    flex: 1,
	    justifyContent: 'center',
	    alignItems: 'center',
	    borderRadius: 5,
	    borderColor: 'blue',
	    borderWidth: 1,
	    marginTop: 5,
	    marginRight: 5,
	    marginBottom: 5,
	    backgroundColor: 'blue'
	  },
	  cardButtonText: {
	    color: 'white'
	  },
	  actionBar: {
	    flex: 1,
	    height: 50,
	    marginLeft: 4,
	    flexDirection: 'row'
	  }
	});

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	  value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _feedCardwrapper = __webpack_require__(19);

	var _feedCard = __webpack_require__(21);

	var _feedCard2 = _interopRequireDefault(_feedCard);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var React = __webpack_require__(2);
	var ReactNative = __webpack_require__(1);

	var bundleURL = 'https://localhost:8081/';

	var timestampImage = bundleURL + 'assets/img/time.png';
	var likeImage = bundleURL + 'assets/img/like.png';
	var likedImage = bundleURL + 'assets/img/liked.png';
	var commentImage = bundleURL + 'assets/img/comment.png';

	var Text = ReactNative.Text;
	var View = ReactNative.View;
	var TouchableHighlight = ReactNative.TouchableHighlight;
	var ListView = ReactNative.ListView;
	var Image = ReactNative.Image;
	var ScrollView = ReactNative.ScrollView;

	var CheckinsCard = function (_FeedCard) {
	  _inherits(CheckinsCard, _FeedCard);

	  function CheckinsCard() {
	    _classCallCheck(this, CheckinsCard);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(CheckinsCard).apply(this, arguments));
	  }

	  _createClass(CheckinsCard, [{
	    key: 'render',
	    value: function render() {
	      return React.createElement(
	        _feedCardwrapper.FeedCardWrapper,
	        { title: 'Status Updates' },
	        React.createElement(
	          ScrollView,
	          {
	            showsHorizontalScrollIndicator: false,
	            automaticallyAdjustInsets: false,
	            decelerationRate: 0,
	            snapToAlignment: 'start',
	            snapToInterval: (0, _feedCardwrapper.GET_CARD_WIDTH)() + _feedCardwrapper.CARD_MARGIN * 1,
	            horizontal: true, style: { flex: 1 },
	            contentContainerStyle: styles.content },
	          this.props.data.map(function (d) {
	            return React.createElement(CheckinCard, { key: d.Id, data: d.Activities[0] });
	          })
	        )
	      );
	    }
	  }]);

	  return CheckinsCard;
	}(_feedCard2.default);

	exports.default = CheckinsCard;

	var CheckinCard = function (_FeedCard2) {
	  _inherits(CheckinCard, _FeedCard2);

	  function CheckinCard() {
	    _classCallCheck(this, CheckinCard);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(CheckinCard).apply(this, arguments));
	  }

	  _createClass(CheckinCard, [{
	    key: 'render',
	    value: function render() {
	      var data = this.props.data;
	      var image = this.props.data.Images && this.props.data.Images.length ? React.createElement(Image, { style: styles.image, source: { uri: this.props.data.Images[0].Url } }) : null;

	      var headerStyle = { height: 50 };

	      if (image) {
	        headerStyle.marginBottom = (0, _feedCardwrapper.GET_CARD_WIDTH)();
	      }

	      var comments = [];

	      if (data.Notes.length) {
	        comments.push({
	          Id: 0,
	          User: data.Source,
	          MetadataTags: data.MetadataTags,
	          Comments: data.Notes
	        });
	      }

	      comments = comments.concat(data.Comments);

	      var likeBar = data.Likes.length ? React.createElement(LikeBar, { likes: data.Likes }) : null;
	      var commentBar = data.Comments.length ? React.createElement(CommentBar, { comments: comments }) : null;

	      return React.createElement(
	        View,
	        { style: { width: (0, _feedCardwrapper.GET_CARD_WIDTH)() } },
	        image,
	        React.createElement(
	          View,
	          { style: [styles.header, headerStyle] },
	          React.createElement(Image, { style: styles.headerImage, source: { uri: data.Source.ImageUrl } }),
	          React.createElement(
	            Text,
	            { style: styles.headerName },
	            data.Source.FirstName,
	            ' ',
	            data.Source.LastName
	          ),
	          React.createElement(Image, { style: styles.headerTimeImage, source: { uri: timestampImage } }),
	          React.createElement(
	            Text,
	            { style: styles.headerTime },
	            '10m'
	          )
	        ),
	        likeBar,
	        commentBar,
	        React.createElement(
	          View,
	          { style: styles.actionBar },
	          React.createElement(
	            TouchableHighlight,
	            { style: styles.actionButton },
	            React.createElement(Image, { style: styles.like, source: { uri: likeImage } })
	          ),
	          React.createElement(
	            TouchableHighlight,
	            { style: styles.actionButton },
	            React.createElement(Image, { style: styles.comment, source: { uri: commentImage } })
	          )
	        )
	      );
	    }
	  }]);

	  return CheckinCard;
	}(_feedCard2.default);

	var LikeBar = function (_React$Component) {
	  _inherits(LikeBar, _React$Component);

	  function LikeBar() {
	    _classCallCheck(this, LikeBar);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(LikeBar).apply(this, arguments));
	  }

	  _createClass(LikeBar, [{
	    key: 'render',
	    value: function render() {
	      var likes = this.props.likes;
	      return React.createElement(
	        View,
	        { style: styles.likeBar },
	        React.createElement(Image, { style: styles.likeBarImage, source: { uri: likeImage } }),
	        React.createElement(
	          View,
	          { style: styles.likeList },
	          likes.map(function (like, index) {
	            return React.createElement(
	              Text,
	              { key: like.Id },
	              like.User.FirstName
	            );
	          }.bind(this))
	        )
	      );
	    }
	  }]);

	  return LikeBar;
	}(React.Component);

	var CommentBar = function (_React$Component2) {
	  _inherits(CommentBar, _React$Component2);

	  function CommentBar() {
	    _classCallCheck(this, CommentBar);

	    return _possibleConstructorReturn(this, Object.getPrototypeOf(CommentBar).apply(this, arguments));
	  }

	  _createClass(CommentBar, [{
	    key: 'render',
	    value: function render() {
	      var comments = this.props.comments;
	      var hasMore = comments.length > 3;
	      var count = 0;
	      var commentCountText = '';

	      if (hasMore) {
	        comments = [];
	        comments.push(this.props.comments[0]);
	        for (var i = this.props.comments.length - 3; i < this.props.comments.length; i++) {
	          comments.push(this.props.comments[i]);
	        }

	        count = this.props.comments.length - 3;
	        commentCountText = count > 1 ? 'comments' : 'comment';
	      }

	      return React.createElement(
	        View,
	        { style: styles.commentBar },
	        React.createElement(Image, { style: styles.commentBarImage, source: { uri: commentImage } }),
	        React.createElement(
	          View,
	          { style: styles.commentList },
	          comments.map(function (comment, index) {
	            if (hasMore && index == 1) {
	              return React.createElement(
	                Text,
	                { key: 'more', style: styles.commentHasMore },
	                count,
	                ' more ',
	                commentCountText
	              );
	            }
	            return React.createElement(
	              View,
	              { key: comment.Id, style: styles.commentWrap },
	              React.createElement(
	                Text,
	                { style: styles.commentText, numberOfLines: 2 },
	                React.createElement(
	                  Text,
	                  { style: styles.commentUser },
	                  comment.User.FirstName,
	                  ' ',
	                  comment.User.LastName
	                ),
	                ' ',
	                comment.Comments
	              )
	            );
	          }.bind(this))
	        )
	      );
	    }
	  }]);

	  return CommentBar;
	}(React.Component);

	var styles = ReactNative.StyleSheet.create({
	  commentUser: {},
	  commentText: {
	    //numberOfLines: 2,
	    width: (0, _feedCardwrapper.GET_CARD_WIDTH)(),
	    fontSize: 13,
	    lineHeight: 16
	  },
	  commentHasMore: {
	    //numberOfLines: 2,
	    width: (0, _feedCardwrapper.GET_CARD_WIDTH)(),
	    fontSize: 13,
	    marginLeft: 5,
	    paddingBottom: 7,
	    textDecorationLine: 'underline'
	  },
	  commentWrap: {
	    flexDirection: 'row',
	    padding: 5,
	    paddingTop: 0,
	    paddingBottom: 11
	  },
	  commentBarImage: {
	    height: 11,
	    width: 11,
	    marginRight: 2,
	    marginTop: 5
	  },
	  commentBar: {
	    width: (0, _feedCardwrapper.GET_CARD_WIDTH)(),
	    flexDirection: 'row',
	    //minHeight: 30,
	    marginTop: -2,
	    padding: 5,
	    paddingTop: 0,
	    paddingLeft: 10,
	    alignItems: 'flex-start',
	    paddingBottom: 0
	  },
	  commentList: {
	    flexDirection: 'column',
	    flexWrap: 'wrap',
	    marginTop: 1
	  },
	  likeBarImage: {
	    height: 11,
	    width: 11,
	    marginRight: 7,
	    marginTop: 4
	  },
	  likeBar: {
	    marginTop: 3,
	    flexDirection: 'row',
	    //minHeight: 30,
	    padding: 5,
	    paddingLeft: 10
	  },
	  likeList: {
	    flexDirection: 'row',
	    flexWrap: 'wrap'
	  },
	  actionBar: {
	    flex: 1,
	    height: 45,
	    backgroundColor: '#eee',
	    flexDirection: 'row'
	  },
	  actionButton: {
	    flex: 1,
	    justifyContent: 'center',
	    alignItems: 'center'
	  },
	  like: {
	    height: 25,
	    width: 25
	  },
	  comment: {
	    height: 25,
	    width: 25
	  },
	  image: {
	    marginTop: 2,
	    width: (0, _feedCardwrapper.GET_CARD_WIDTH)(),
	    height: (0, _feedCardwrapper.GET_CARD_WIDTH)(),
	    resizeMode: 'cover',
	    position: 'absolute',
	    top: 0,
	    left: 0
	  },
	  headerImage: {
	    marginLeft: 10,
	    width: 40,
	    height: 40,
	    borderRadius: 20
	  },
	  headerName: {
	    fontWeight: '500',
	    fontSize: 15,
	    width: 210,
	    marginLeft: 10,
	    height: 45
	  },
	  headerTimeImage: {
	    marginTop: 5,
	    marginLeft: 2,
	    width: 10,
	    height: 10
	  },
	  headerTime: {
	    marginTop: 3,
	    fontSize: 12,
	    marginLeft: 5,
	    height: 40,
	    flex: 1
	  },
	  wrapper: {
	    width: (0, _feedCardwrapper.GET_CARD_WIDTH)(),
	    marginLeft: 27,
	    paddingTop: 1,
	    flex: 1,
	    backgroundColor: 'rgba(255,255,255,1)',
	    opacity: 1.5
	  },
	  header: {
	    paddingTop: 6,
	    flex: 1,
	    flexDirection: 'row',
	    backgroundColor: 'rgba(255,255,255,0.5)'
	  },
	  separator: {
	    height: 19,
	    backgroundColor: '#ddd'
	  }
	});

/***/ }
/******/ ]);